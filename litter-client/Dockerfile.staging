# Stage 1
FROM node:18.10.0-bullseye-slim as build

RUN mkdir -p /usr/src/app/build
RUN chown -R node /usr/src/app/build
RUN mkdir -p /usr/src/app/node_modules
RUN chown -R node /usr/src/app/node_modules

# Create app directory
WORKDIR /usr/src/app/

# Install app dependencies
# A wildcard is used to ensure both package.json AND package-lock.json are copied
# where available (npm@5+)
COPY --chown=node:node package*.json ./
RUN npm ci --only=production --omit=dev

# Bundle app source
COPY --chown=node:node . .

# Set the user
USER node

ENV REACT_APP_LITS_API='http://cscloud6-55.lnu.se/litter/api/v1/lits'
ENV REACT_APP_USERS_API='http://cscloud6-55.lnu.se/litter/api/v1/users'
ENV REACT_APP_AUTH_API='http://cscloud6-55.lnu.se/litter/api/v1/auth'

# Start the web server.
RUN npm run build


# Stage 2
FROM nginx:alpine

COPY ./nginx/nginx.conf /etc/nginx/nginx.conf

RUN rm -rf /usr/share/nginx/html/*

COPY --from=build /usr/src/app/build /usr/share/nginx/html

EXPOSE 8080

ENTRYPOINT ["nginx", "-g", "daemon off;"]