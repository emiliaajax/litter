stages:          # List of stages for jobs, and their order of execution
  - build
  - test
  - integration-test
  - deploy

build:
  stage: build
  image:
    name: gcr.io/kaniko-project/executor:v1.9.0-debug
    entrypoint: [""]
  script:  # See https://docs.gitlab.com/ee/ci/docker/using_kaniko.html
    - /kaniko/executor
      --context "${CI_PROJECT_DIR}/litter-service"  
      --dockerfile "${CI_PROJECT_DIR}/litter-service/Dockerfile.production"
      --destination "${CI_REGISTRY_IMAGE}/litter:${CI_COMMIT_TAG:-latest}"            # Tags with "latest" if untagged commit.

unit-test-job:   # This job runs in the test stage.
  stage: test    # It only starts when the job in the build stage completes successfully.
  script:
    - echo "Running unit tests... This will take about 60 seconds."
    - sleep 2
    - echo "Code coverage is 90%"

lint-test-job:   # This job also runs in the test stage.
  stage: test    # It can run at the same time as unit-test-job (in parallel).
  script:
    - echo "Linting code... This will take about 10 seconds."
    - sleep 2
    - echo "No lint issues found."

deploy:
  stage: deploy
  image:
    name: gcr.io/k8s-skaffold/skaffold:v2.0.0
    entrypoint: ['']
  environment:
    name: production
    url: $LITTER_URL # Set as environment variable. URL to your application. Ie HTTP://cscloud6-25.lnu.se
  when: manual
  script:
    - kubectl config get-contexts
   # Configure kubectl to use our own k8s cluster, you need to setup an Gitlab agent in you k8s kluster
    - kubectl config use-context $K8S_CONTEXT
   # Authorize the cluster to pull images from our registry. (synced against Deploy Token "gitlab-deploy-token")
    - kubectl delete secret regcred || true
    - kubectl create secret docker-registry regcred --docker-server=$CI_REGISTRY --docker-username=$CI_DEPLOY_USER --docker-password=$CI_DEPLOY_PASSWORD

    - kubectl apply -f ./k8s/litter-service.yaml # We are skipping ingress for now
    
   # Debugging outputs after completion
    - kubectl get deployments
    - kubectl get pods
    - kubectl get services

